# See conda environments
conda env list

# Create conda environment

conda create --name sp_gradient
conda activate sp_gradient
conda deactivate

# Load R packages

module load R
R

library("ggplot2")
library("scales")
library("tidyr")
library("dplyr")
# install.packages("ggpmisc")
library("ggpmisc")
library("ggpubr")
library("plotly")
library(plyr)
library(RColorBrewer)
library(devtools)
# install_github("vqv/ggbiplot")
library(ggbiplot)
library(vegan)
# library(FSA)
# install.packages("DescTools")
# library(DescTools)
# library(rcompanion)

# New Liner mixed model ####
library(lme4)
library(car)
# remotes::install_version("MuMIn", "1.46.0")
library(MuMIn)
# install.packages("cAIC4")
library(cAIC4)
# install.packages("domir")
library(domir)
# install.packages("buildmer")
library(buildmer)
# install.packages("lmerTest")
library(lmerTest)

# Load data

my_data         = read.csv("/pub/lucianac/anna_gradient/SP_metadata_2021.csv", sep=";")

my_data$LTC_LTN <- my_data$L_TC/my_data$L_TN
my_data$xylcbh <- my_data$xyl + my_data$cbh
my_data$alphabeta <- my_data$alpha + my_data$beta

#To replace NA values with a mean of the other values of the Site:
for (i in which(sapply(my_data, is.numeric))) {
  for (j in which(is.na(my_data[, i]))) {
    my_data[j, i] <- mean(my_data[my_data[, "Site"] == my_data[j, "Site"], i],  na.rm = TRUE)
  }
}

max_values      = apply(my_data[,c(8:34,40,41,76,81:93)],2,max)
my_data.1       = as.data.frame(cbind(my_data[,c(2,7,46:53,64,94,95)],
                                      my_data[,c(8:34,40,41,76,81:93)] / as.list(max_values)))
a.1             = as.data.frame(colnames(my_data.1))

corr            = as.data.frame(cor(my_data.1[,14:56]))

my_data.1 <-my_data.1 %>%
  mutate(Cenz = select(., 3:6) %>% rowSums(na.rm = TRUE)) %>% 
  mutate(MB = select(.,41:42) %>% rowSums(na.rm = TRUE))
  
######################################################################################
# Respiration
######################################################################################  
  
my_data.resp = my_data.1[-c(9,21,35,39,48),]

dominance_output <- domin(Respiration ~ 1, 
                          lmer, 
                          list(\(x) list(R2m = MuMIn::r.squaredGLMM(x)[[1]]), "R2m"), 
                          data = my_data.resp, 
                          sets = list("Water_content","Clay","BIX","AI",
                                      "BIX:AI","Clay:AI"), 
                          consmodel = "(1|Site)") # Replace with your actual function

dominance_output
Overall Fit Statistic:      0.5980825 
Constant Model Fit Statistic:  0 

General Dominance Statistics:
     General Dominance Standardized Ranks
set1       0.071407885  0.119394699     3
set2       0.273661023  0.457563972     1
set3       0.003060763  0.005117626     6
set4       0.042536690  0.071121772     5
set5       0.051098593  0.085437359     4
set6       0.156317587  0.261364571     2  

Components of sets:
set1 : Water_content 
set2 : Clay 
set3 : BIX 
set4 : AI 
set5 : BIX:AI 
set6 : Clay:AI

######################################################################################
# Bacterial Biomass
######################################################################################   

dominance_output <- domin(log(BB) ~ 1, 
                          lmer, 
                          list(\(x) list(R2m = MuMIn::r.squaredGLMM(x)[[1]]), "R2m"), 
                          data = my_data.1, 
                          sets = list("Water_content","Peak_B","L_TN","PO43",
                                      "E2.E3","Peak_C","AI","E2.E3:AI","Peak_B:AI",
                                      "Soil_Temp","Peak_C:AI"), 
                          consmodel = "(1|Site)") # Replace with your actual function

dominance_output
Overall Fit Statistic:      0.6075355
Constant Model Fit Statistic:  0

General Dominance Statistics:
      General Dominance Standardized Ranks
set1        0.238176570  0.392037273     1
set2        0.032198808  0.052999055     6
set3        0.012544532  0.020648227     9
set4        0.094928530  0.156251818     3
set5        0.002668915  0.004393018    11
set6        0.003296417  0.005425884    10
set7        0.052163573  0.085860943     4
set8        0.014039834  0.023109486     8
set9        0.027110370  0.044623515     7
set10       0.097473034  0.160440057     2
set11       0.032934941  0.054210724     5

Components of sets:
set1 : Water_content
set2 : Peak_B
set3 : L_TN
set4 : PO43
set5 : E2.E3
set6 : Peak_C
set7 : AI
set8 : E2.E3:AI
set9 : Peak_B:AI
set10 : Soil_Temp
set11 : Peak_C:AI
						  
######################################################################################
# Fungal Biomass
######################################################################################

dominance_output <- domin(log(FB) ~ 1, 
                          lmer, 
                          list(\(x) list(R2m = MuMIn::r.squaredGLMM(x)[[1]]), "R2m"), 
                          data = my_data.1, 
                          sets = list("TC","C_N","Peak_C","Litter"), 
                          consmodel = "(1|Site)") # Replace with your actual function
						  
dominance_output
Overall Fit Statistic:      0.5749925 
Constant Model Fit Statistic:  0 

General Dominance Statistics:
     General Dominance Standardized Ranks
set1        0.37757846   0.65666679     1
set2        0.06203117   0.10788170     3
set3        0.09754110   0.16963892     2
set4        0.03784174   0.06581259     4

Components of sets:
set1 : TC 
set2 : C_N 
set3 : Peak_C 
set4 : Litter
						  
######################################################################################
# Total Biomass
###################################################################################### 

dominance_output <- domin(log(MB) ~ 1, 
                          lmer, 
                          list(\(x) list(R2m = MuMIn::r.squaredGLMM(x)[[1]]), "R2m"), 
                          data = my_data.1, 
                          sets = list("TC","Peak_B","Water_content","C_N","Silt",
                                      "Clay","PO43","Peak_C"), 
                          consmodel = "(1|Site)") # Replace with your actual function

dominance_output
Overall Fit Statistic:      0.8166648
Constant Model Fit Statistic:  0

General Dominance Statistics:
     General Dominance Standardized Ranks
set1        0.16376652   0.20053088     3
set2        0.06816352   0.08346572     5
set3        0.20469265   0.25064463     1
set4        0.03276086   0.04011543     6
set5        0.01810851   0.02217373     8
set6        0.18989803   0.23252873     2
set7        0.11293742   0.13829103     4
set8        0.02633731   0.03224985     7

Components of sets:
set1 : TC
set2 : Peak_B
set3 : Water_content
set4 : C_N
set5 : Silt
set6 : Clay
set7 : PO43
set8 : Peak_C
				  
######################################################################################
# Enzyme - beta
###################################################################################### 

my_data.beta = my_data.1[-c(59),]
dominance_output <- domin(beta ~ 1, 
                          lmer, 
                          list(\(x) list(R2m = MuMIn::r.squaredGLMM(x)[[1]]), "R2m"), 
                          data = my_data.beta, 
                          sets = list("Silt","HIX","Peak_C"), 
                          consmodel = "(1|Site)") # Replace with your actual function

dominance_output
Overall Fit Statistic:      0.2455794 
Constant Model Fit Statistic:  0 

General Dominance Statistics:
     General Dominance Standardized Ranks
set1        0.20841749   0.84867662     1
set2        0.01520575   0.06191785     3
set3        0.02195616   0.08940553     2

Components of sets:
set1 : Silt 
set2 : HIX 
set3 : Peak_C 
						  
######################################################################################
# Enzyme - xyl
###################################################################################### 

dominance_output <- domin(xyl ~ 1, 
                          lmer, 
                          list(\(x) list(R2m = MuMIn::r.squaredGLMM(x)[[1]]), "R2m"), 
                          data = my_data.1, 
                          sets = list("L_TN","HIX","AI","Litter","Soil_Temp",
                                      "Soil_Temp:AI"), 
                          consmodel = "(1|Site)") # Replace with your actual function

dominance_output
Overall Fit Statistic:      0.3242244 
Constant Model Fit Statistic:  0 

General Dominance Statistics:
     General Dominance Standardized Ranks
set1       0.164125630   0.50620995     1
set2       0.051321947   0.15829143     3
set3       0.033724092   0.10401466     4
set4      -0.007112691  -0.02193755     6
set5       0.020164176   0.06219203     5
set6       0.062001271   0.19122949     2

Components of sets:
set1 : L_TN 
set2 : HIX 
set3 : AI 
set4 : Litter 
set5 : Soil_Temp 
set6 : Soil_Temp:AI
						  
######################################################################################
# Enzyme - gla
###################################################################################### 

dominance_output <- domin(log(gla) ~ 1, 
                          lmer, 
                          list(\(x) list(R2m = MuMIn::r.squaredGLMM(x)[[1]]), "R2m"), 
                          data = my_data.4, 
                          sets = list("Water_content","SR","Soil_Temp","C_N",
                                      "altitude","pH","TC"), 
                          consmodel = "(1|Site)") # Replace with your actual function

dominance_output
Overall Fit Statistic:      0.638128 
Constant Model Fit Statistic:  0 

General Dominance Statistics:
     General Dominance Standardized Ranks
set1        0.22585311   0.35393072     1
set2        0.06303780   0.09878551     5
set3        0.04803571   0.07527598     6
set4        0.08142756   0.12760381     3
set5        0.01163089   0.01822658     7
set6        0.13508588   0.21169087     2
set7        0.07305707   0.11448654     4

Components of sets:
set1 : Water_content 
set2 : SR 
set3 : Soil_Temp 
set4 : C_N 
set5 : altitude 
set6 : pH 
set7 : TC 
						  
######################################################################################
# Enzyme - fos
###################################################################################### 

dominance_output <- domin(log(fos) ~ 1, 
                          lmer, 
                          list(\(x) list(R2m = MuMIn::r.squaredGLMM(x)[[1]]), "R2m"), 
                          data = my_data.1, 
                          sets = list("SOM","Litter","PO43","BB","Clay","Silt"), 
                          consmodel = "(1|Site)") # Replace with your actual function

dominance_output
Overall Fit Statistic:      0.6298265 
Constant Model Fit Statistic:  0 

General Dominance Statistics:
     General Dominance Standardized Ranks
set1        0.22208487   0.35261279     1
set2        0.08328740   0.13223864     4
set3        0.12839352   0.20385538     2
set4        0.12274067   0.19488014     3
set5        0.04230701   0.06717249     5
set6        0.03101302   0.04924057     6

Components of sets:
set1 : SOM 
set2 : Litter 
set3 : PO43 
set4 : BB 
set5 : Clay 
set6 : Silt
						  
######################################################################################
# Enzyme - leu
######################################################################################  	

my_data.leu = my_data.1[-c(40,43,45),]
dominance_output <- domin(log(leu) ~ 1, 
                          lmer, 
                          list(\(x) list(R2m = MuMIn::r.squaredGLMM(x)[[1]]), "R2m"), 
                          data = my_data.leu, 
                          sets = list("TC","pH","C_N"), 
                          consmodel = "(1|Site)") # Replace with your actual function					  

dominance_output
Overall Fit Statistic:      0.7877693 
Constant Model Fit Statistic:  0 

General Dominance Statistics:
     General Dominance Standardized Ranks
set1        0.39167290   0.49719238     1
set2        0.36289716   0.46066425     2
set3        0.03319925   0.04214337     3

Components of sets:
set1 : TC 
set2 : pH 
set3 : C_N
						  
######################################################################################
# Enzyme - phe
######################################################################################	

dominance_output <- domin(phe ~ 1, 
                          lmer, 
                          list(\(x) list(R2m = MuMIn::r.squaredGLMM(x)[[1]]), "R2m"), 
                          data = my_data.1, 
                          sets = list("LTC_LTN","TC","SOM","Water_content","Peak_B",
                                      "E4.E6","HIX","Soil_Temp"), 
                          consmodel = "(1|Site)") # Replace with your actual function

dominance_output
Overall Fit Statistic:      0.4886686
Constant Model Fit Statistic:  0

General Dominance Statistics:
     General Dominance Standardized Ranks
set1        0.09932115   0.20324850     2
set2        0.14676252   0.30033140     1
set3        0.04279879   0.08758245     5
set4        0.04866349   0.09958383     4
set5        0.08415868   0.17222036     3
set6        0.02003721   0.04100367     7
set7        0.01669874   0.03417191     8
set8        0.03022800   0.06185788     6

Components of sets:
set1 : LTC_LTN
set2 : TC
set3 : SOM
set4 : Water_content
set5 : Peak_B
set6 : E4.E6
set7 : HIX
set8 : Soil_Temp

######################################################################################
# Enzyme - xylcbh
######################################################################################

dominance_output <- domin(xylcbh ~ 1, 
                          lmer, 
                          list(\(x) list(R2m = MuMIn::r.squaredGLMM(x)[[1]]), "R2m"), 
                          data = my_data.1, 
                          sets = list("L_TN","HIX","AI","L_TN:AI","C_N","Soil_Temp",
                                      "E4.E6","Silt","FB","TC","Silt:AI"), 
                          consmodel = "(1|Site)") # Replace with your actual function

dominance_output
Overall Fit Statistic:      0.5508247
Constant Model Fit Statistic:  0

General Dominance Statistics:
      General Dominance Standardized Ranks
set1        0.106402792  0.193169975     1
set2        0.069513541  0.126199030     3
set3        0.044712262  0.081173307     7
set4        0.049693289  0.090216162     6
set5        0.027828770  0.050522009     9
set6        0.042242333  0.076689252     8
set7        0.003258135  0.005915013    11
set8        0.057852736  0.105029308     4
set9        0.023497137  0.042658104    10
set10       0.070016140  0.127111478     2
set11       0.055807553  0.101316362     5

Components of sets:
set1 : L_TN
set2 : HIX
set3 : AI
set4 : L_TN:AI
set5 : C_N
set6 : Soil_Temp
set7 : E4.E6
set8 : Silt
set9 : FB
set10 : TC
set11 : Silt:AI

######################################################################################
# Enzyme - alphabeta # This model is a bit weird
######################################################################################		

my_data.alphabeta = my_data.1[-c(6,9,37,45),]
dominance_output.1 <- domin(log(alphabeta) ~ 1, 
                          lmer, 
                          list(\(x) list(R2m = MuMIn::r.squaredGLMM(x)[[1]]), "R2m"), 
                          data = my_data.alphabeta, 
                          sets = list("Silt","L_TN","HIX","Soil_Temp","C_N","SR",
                                      "FB","PO43","Water_content","SO42","AI",
                                      "C_N:AI","PO43:AI","E4.E6","L_TN:AI"), 
                          consmodel = "(1|Site)") # Replace with your actual function

dominance_output.1
Overall Fit Statistic:      0.607719
Constant Model Fit Statistic:  0

General Dominance Statistics:
      General Dominance Standardized Ranks
set1        0.092287110  0.151858201     2
set2        0.016232491  0.026710522    10
set3        0.021879501  0.036002662     8
set4        0.107678333  0.177184419     1
set5        0.090347605  0.148666751     3
set6        0.045420428  0.074739198     6
set7       -0.003720560 -0.006122172    15
set8        0.011483967  0.018896838    11
set9        0.002100668  0.003456644    14
set10       0.006767601  0.011136070    12
set11       0.080646753  0.132704024     4
set12       0.041536308  0.068347888     7
set13       0.017230805  0.028353246     9
set14       0.006295301  0.010358902    13
set15       0.071532659  0.117706807     5

Components of sets:
set1 : Silt
set2 : L_TN
set3 : HIX
set4 : Soil_Temp
set5 : C_N
set6 : SR
set7 : FB
set8 : PO43
set9 : Water_content
set10 : SO42
set11 : AI
set12 : C_N:AI
set13 : PO43:AI
set14 : E4.E6
set15 : L_TN:AI
						  
dominance_output.2 <- domin(log(alphabeta) ~ 1, 
                          lmer, 
                          list(\(x) list(R2m = MuMIn::r.squaredGLMM(x)[[1]]), "R2m"), 
                          data = my_data.alphabeta, 
                          sets = list("BIX","LTC_LTN","HIX:AI","SO42:AI","Litter",
                                      "AI:Litter","BB","AI:BIX","SR:AI","SOM","NH4"), 
                          consmodel = "(1|Site)")

dominance_output.2
Overall Fit Statistic:      0.3025773
Constant Model Fit Statistic:  0

General Dominance Statistics:
      General Dominance  Standardized Ranks
set1       5.232088e-03  1.729174e-02     6
set2       3.671318e-03  1.213349e-02     7
set3       8.708123e-03  2.877983e-02     5
set4      -2.789762e-05 -9.219998e-05     9
set5       1.179788e-02  3.899130e-02     4
set6       3.327897e-02  1.099850e-01     3
set7       3.475175e-03  1.148525e-02     8
set8       8.166541e-02  2.698993e-01     2
set9       1.574176e-01  5.202558e-01     1
set10     -2.407065e-04 -7.955207e-04    10
set11     -2.400654e-03 -7.934019e-03    11

Components of sets:
set1 : BIX
set2 : LTC_LTN
set3 : HIX:AI
set4 : SO42:AI
set5 : Litter
set6 : AI:Litter
set7 : BB
set8 : AI:BIX
set9 : SR:AI
set10 : SOM
set11 : NH4
					  
######################################################################################
# Enzyme - Cenz
######################################################################################
dominance_output <- domin(Cenz ~ 1, 
                          lmer, 
                          list(\(x) list(R2m = MuMIn::r.squaredGLMM(x)[[1]]), "R2m"), 
                          data = my_data.8, 
                          sets = list("Soil_Temp","C_N","TC","HIX"), 
                          consmodel = "(1|Site)") # Replace with your actual function

dominance_output
Overall Fit Statistic:      0.3522531 
Constant Model Fit Statistic:  0 

General Dominance Statistics:
     General Dominance Standardized Ranks
set1        0.18019092   0.51153827     1
set2        0.05073254   0.14402300     3
set3        0.01486847   0.04220963     4
set4        0.10646112   0.30222909     2

Components of sets:
set1 : Soil_Temp 
set2 : C_N 
set3 : TC 
set4 : HIX 						  