# See conda environments
conda env list

# Create conda environment

conda create --name sp_gradient
conda activate sp_gradient
conda deactivate

# Load R packages

module load R
R

library("ggplot2")
library("scales")
library("tidyr")
library("dplyr")
# install.packages("ggpmisc")
library("ggpmisc")
library("ggpubr")
library("plotly")
library(plyr)
library(RColorBrewer)
library(devtools)
# install_github("vqv/ggbiplot")
library(ggbiplot)
library(vegan)
# library(FSA)
# install.packages("DescTools")
# library(DescTools)
# library(rcompanion)

# New Liner mixed model ####
library(lme4)
library(car)
# remotes::install_version("MuMIn", "1.46.0")
library(MuMIn)
# install.packages("cAIC4")
library(cAIC4)
# install.packages("domir")
library(domir)
# install.packages("buildmer")
library(buildmer)
# install.packages("lmerTest")
library(lmerTest)

# Load data

my_data         = read.csv("/pub/lucianac/anna_gradient/SP_metadata_2021.csv", sep=";")

my_data$LTC_LTN <- my_data$L_TC/my_data$L_TN
my_data$xylcbh <- my_data$xyl + my_data$cbh
my_data$alphabeta <- my_data$alpha + my_data$beta

#To replace NA values with a mean of the other values of the Site:
for (i in which(sapply(my_data, is.numeric))) {
  for (j in which(is.na(my_data[, i]))) {
    my_data[j, i] <- mean(my_data[my_data[, "Site"] == my_data[j, "Site"], i],  na.rm = TRUE)
  }
}

max_values      = apply(my_data[,c(8:34,40,41,76,81:93)],2,max)
my_data.1       = as.data.frame(cbind(my_data[,c(2,7,46:53,64,94,95)],
                                      my_data[,c(8:34,40,41,76,81:93)] / as.list(max_values)))
a.1             = as.data.frame(colnames(my_data.1))

corr            = as.data.frame(cor(my_data.1[,14:56]))

my_data.1 <-my_data.1 %>%
  mutate(Cenz = select(., 3:6) %>% rowSums(na.rm = TRUE)) %>% 
  mutate(MB = select(.,41:42) %>% rowSums(na.rm = TRUE))





